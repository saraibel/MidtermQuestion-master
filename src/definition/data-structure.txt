Please answer the below Data Structure Questions:
why do we need data structure?
In order to locate and retrieve  data it is required to have data in a structured form.Structured form of data makes
retrieval and manipulation easy.
  What are the various operations that can be performed on different Data Structures?
1. Searching
2. Sorting
3. Insertion
4. Deletion
5. Merging
6. Traversing


List out the areas in which data structures are applied extensively?
1. Compiler Design,
2. Operating System,
3. Database Management System,
4. Statistical analysis package,
5. Numerical Analysis,
6. Graphics,
7. Artificial Intelligence,
8. Simulation


what is an Array?
An array in programming is a collection of data/value which has index associated with it. An array shall contain
similar types of data, an array can be sorted or un sorted.



what is the difference between the Array and ArrayList?
1.Array length if fixed but arraylist is dynamic.
2.Array members are accessed using [], but ArrayList has a set of methods
to access elements and modify them as because arraylist is collection of framework in java.
3. Array can store primitive variables and objects but arraylist can store only objects.



what is LinkedList?
A linked list is linear data Structure where each element is a separate object which is called
node. Each node has data and reference to the next node. Last node has reference to null.


How is an Array different from Linked List?
1. An array element is having index number, but a node is having reference to next node.
2. In array each element is independent, does not have any connection to the other element
 on the other hand in linked list each node are connected by previous node.
3. In Linked list, location or address of elements is stored in the link part of previous
element/node. In array, no pointers are used like linked list, so no need of extra space
in memory for pointer.
4. Linked list consumed extra memory as the link location need to be saved in in the linked
part of the previous elements in case of array it is not required.



what is queue?
It is a linear data structure where elements can be accessed on the basis of FIFO.


what is stack?
 Stack is linear data structure where elements can be accessed on the basis of LIFO.


what is FIFO and LIFO?
FIFO: First in First out. Example: In Queue data can be accessed by FIFO method.
LIFO: Last in First out. Example: In Stack elements can be accessed on the basis of LIFO.


what is the order of complexity?
Assuming the input is of size N, we can say that the algorithm will finish at O(N), O(N^2), O(N^3), O(N*log(N)) etc.
This means that it is a certain mathematical expression of the size of the input, and the algorithm finishes between
two factors of it. Generally, the smaller the order of complexity of the program's underlying algorithm, the faster
it will run and the better it will scale as the input gets larger. Thus, we should often seek more efficient
algorithms in order to reduce the order of complexity.



what is the best case to search an element from an array?
Binary search & sorting algorithm.



what is the worst case to search an element from an array?
For an unsorted array, we have to search element by element, until the element is found or array is completely
traversed. Element can be at 1st position, the last position or somewhere in between. The worst case arises when
the element is at last position or not in the array, therefore we have to traverse the whole array giving n no.
of repetitions over loop. Therefore the worst case time complexity is O(n).


what is tree in data structure?
A tree is a nonlinear data structure whereas arrays, linked lists, stacks and queues are linear data structures.
It can be empty of nodes or a tree can be a structure consisting of one node called the root and zero or one or more
sub-trees.



what is graph in data structure?
A Graph is a non-linear data structure consisting of nodes and edges. The nodes are sometimes also referred to as
vertices and the edges are lines or arcs that connect any two nodes in the graph. For example, in Facebook,
each person is represented with a vertex(or node). Each node is a structure and contains information like
person id, name, gender, locale etc.



what is the difference between the HashTable and HashMap?
HashTable is synchronized, HashMap is not. Therefore it makes HashMap efficient with non-threaded applications
because unsynchronized objects perform better than synchronized objects. HashTable do not allow null keys or values
where HashMap does allow one null key and unlimited null values.



What are the major data structures used in the following areas : RDBMS, Network data model and Hierarchical data mode
1. RDBMS - Array
2. Network data model - Graph
3. Hierarchical data model - Trees



How HashMap works in java?
A HashMap element has key and value in Java, elements are stored against a key. Map Interface implemented on HashMap
in Java Collection Framework. elements manipulation is easy on the basis of key of the value.



What is ArrayIndexOutOfBoundsException in java? When it occurs?
It is a class in Java API, which extends IndexOutOfBoundException. IndexOutOfBoundsException occur when an array
has been accessed with an illegal index. Index either negative or greater than or equal to the size of the array.



What are the different ways of copying an array into another array?
There are mainly four different ways to copy all elements of one array into another array in Java-
1. Manually 2. Arrays.copyOf() 3. System.arraycopy() 4. Object.clone()



What is difference between an array and a linked list?
1.An array element is having index number, but a node is having reference to next node.
2. In array each element is independent, does not have any connection to the other element
on the other hand in linked list each node are connected by previous node.
3. In Linked list, location or address of elements is stored in the link part of previous
element/node. In array, no pointers are used like linked list, so no need of extra space in memory for pointer.
4. Linked list consumed extra memory as the link location need to be saved in in the linked
part of the previous elements in case of array it is not required.
5. An array functions by contiguous memory locations allocated at compile time, i.e. at the
time of declaration of array. However, a linked list memory is assigned when data is added
to it which means at runtime.



What is DFS and BFS?
Depth-first search (DFS) is an algorithm for traversing or searching tree or graph data structure.
This one starts at the root and explores as far as possible along each branch before backtracking.
Breadth-first search (BFS) is an algorithm for traversing or searching tree or graph data structure.
It starts at the tree roots and explores the neighbour nodes first before visiting to the next level of neighbours.



What is Recursion?
It is the process where a method calls itself inside the method. he method which causes recursion is called
recursive method.



What are linear and non linear data Structures?
Linear Data Structures: The data structure where data items are organized sequentially or linearly where data
elements attached one after another is called linear data structure.
Examples of linear data structures are Arrays, Stack, Queue and Linked List.
Non Linear Data Structures: The data structure where data items are not organized sequentially is called non
linear data structure. Examples of non linear data structures are Trees and Graphs.



What is Big-(O)-notation?
Big O notation is used in Computer Science to describe the performance or complexity of an algorithm. Big O
specifically describes the worst-case scenario, and can be used to describe the execution time required (how long
an algorithm will take to run) or the space used (e.g. in memory or on disk) by an algorithm.



Outlined different kind of sorting algorithm with time complexity?
Algorythm                               Time complexity
Selection Sort	            Ω(n^2)	        θ(n^2)	    O(n^2)
Bubble Sort	                Ω(n)	        θ(n^2)	    O(n^2)
Insertion Sort	            Ω(n)	        θ(n^2)	    O(n^2)
Heap Sort	                Ω(n log(n))	    θ(n log(n))	O(n log(n))
Quick Sort	                Ω(n log(n))	    θ(n log(n))	O(n^2)
Merge Sort	                Ω(n log(n))	    θ(n log(n))	O(n log(n))
Bucket Sort             	Ω(n+k)	        θ(n+k)	    O(n^2)
Radix Sort	                Ω(nk)	        θ(nk)	    O(nk)


Draw a table with time complexity in which it will summarize all the data structure feature's advantages and disadvantages.
Design a data structure that supports insert, delete, search and getRandom in constant time
